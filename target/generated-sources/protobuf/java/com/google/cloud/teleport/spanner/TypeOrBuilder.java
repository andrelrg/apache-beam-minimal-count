// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: type.proto

package com.google.cloud.teleport.spanner;

public interface TypeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.google.cloud.teleport.spanner.Type)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The [TypeCode][google.spanner.v1.TypeCode] for this type.
   * </pre>
   *
   * <code>.com.google.cloud.teleport.spanner.TypeCode code = 1;</code>
   * @return The enum numeric value on the wire for code.
   */
  int getCodeValue();
  /**
   * <pre>
   * Required. The [TypeCode][google.spanner.v1.TypeCode] for this type.
   * </pre>
   *
   * <code>.com.google.cloud.teleport.spanner.TypeCode code = 1;</code>
   * @return The code.
   */
  com.google.cloud.teleport.spanner.TypeCode getCode();

  /**
   * <pre>
   * If [code][google.spanner.v1.Type.code] ==
   * [ARRAY][google.spanner.v1.TypeCode.ARRAY], then `array_element_type` is the
   * type of the array elements.
   * </pre>
   *
   * <code>.com.google.cloud.teleport.spanner.Type array_element_type = 2;</code>
   * @return Whether the arrayElementType field is set.
   */
  boolean hasArrayElementType();
  /**
   * <pre>
   * If [code][google.spanner.v1.Type.code] ==
   * [ARRAY][google.spanner.v1.TypeCode.ARRAY], then `array_element_type` is the
   * type of the array elements.
   * </pre>
   *
   * <code>.com.google.cloud.teleport.spanner.Type array_element_type = 2;</code>
   * @return The arrayElementType.
   */
  com.google.cloud.teleport.spanner.Type getArrayElementType();
  /**
   * <pre>
   * If [code][google.spanner.v1.Type.code] ==
   * [ARRAY][google.spanner.v1.TypeCode.ARRAY], then `array_element_type` is the
   * type of the array elements.
   * </pre>
   *
   * <code>.com.google.cloud.teleport.spanner.Type array_element_type = 2;</code>
   */
  com.google.cloud.teleport.spanner.TypeOrBuilder getArrayElementTypeOrBuilder();

  /**
   * <pre>
   * If [code][google.spanner.v1.Type.code] ==
   * [STRUCT][google.spanner.v1.TypeCode.STRUCT], then `struct_type` provides
   * type information for the struct's fields.
   * </pre>
   *
   * <code>.com.google.cloud.teleport.spanner.StructType struct_type = 3;</code>
   * @return Whether the structType field is set.
   */
  boolean hasStructType();
  /**
   * <pre>
   * If [code][google.spanner.v1.Type.code] ==
   * [STRUCT][google.spanner.v1.TypeCode.STRUCT], then `struct_type` provides
   * type information for the struct's fields.
   * </pre>
   *
   * <code>.com.google.cloud.teleport.spanner.StructType struct_type = 3;</code>
   * @return The structType.
   */
  com.google.cloud.teleport.spanner.StructType getStructType();
  /**
   * <pre>
   * If [code][google.spanner.v1.Type.code] ==
   * [STRUCT][google.spanner.v1.TypeCode.STRUCT], then `struct_type` provides
   * type information for the struct's fields.
   * </pre>
   *
   * <code>.com.google.cloud.teleport.spanner.StructType struct_type = 3;</code>
   */
  com.google.cloud.teleport.spanner.StructTypeOrBuilder getStructTypeOrBuilder();
}
